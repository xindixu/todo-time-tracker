syntax = "proto3";

package ttt;

option go_package = "todo-time-tracker/proto/go/ttt";

import "proto/model.proto";
import "proto/context.proto";

import "google/protobuf/duration.proto";

// TTTService defines the main gRPC service for Todo Time Tracker
service TTTService {
  // User operations
  rpc CreateUser(CreateUserReq) returns (CreateUserResp);

  // Tag operations
  rpc GetTag(GetTagReq) returns (GetTagResp);
  rpc ListTags(ListTagsReq) returns (ListTagsResp);
  rpc CreateTag(CreateTagReq) returns (CreateTagResp);
  rpc UpdateTag(UpdateTagReq) returns (UpdateTagResp);
  rpc DeleteTag(DeleteTagReq) returns (DeleteTagResp);

  // Task operations
  rpc CreateTask(CreateTaskReq) returns (CreateTaskResp);
  rpc GetTask(GetTaskReq) returns (GetTaskResp);
  rpc LinkTasks(LinkTasksReq) returns (LinkTasksResp);
}


// -- User operations --
message CreateUserReq {
  context.Context context = 1;
  string name = 2;
  string email = 3;
  string password = 4;
}

message CreateUserResp {
  model.User user = 1;
}

// -- Tag operations --

message GetTagReq {
  context.Context context = 1;
  string uuid = 2;
}

message GetTagResp {
  model.Tag tag = 1;
}

message ListTagsReq {
  context.Context context = 1;
  // Could add pagination later
}

message ListTagsResp {
  repeated model.Tag tags = 1;
}

message CreateTagReq {
  context.Context context = 1;
  string name = 2;
}

message CreateTagResp {
  model.Tag tag = 1;
}

message UpdateTagReq {
  context.Context context = 1;
  string uuid = 2;
  string name = 3;
}

message UpdateTagResp {
  model.Tag tag = 1;
}

message DeleteTagReq {
  context.Context context = 1;
  string uuid = 2;
}

message DeleteTagResp {
}

// -- Task operations --

message CreateTaskReq {
  context.Context context = 1;
  string name = 2;
  string description = 3;
  model.Task.Status status = 4;
  google.protobuf.Duration estimated_duration = 5;
}

message CreateTaskResp {
  model.Task task = 1;
}

message GetTaskReq {
  context.Context context = 1;
  string uuid = 2;
}

message GetTaskResp {
  model.Task task = 1;
}

message LinkTasksReq {
  context.Context context = 1;
  string from_task_uuid = 2;
  string to_task_uuid = 3;
  model.Task.Link link = 4;
}

message LinkTasksResp {
}